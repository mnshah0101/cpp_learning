10.2 Floating-point and integral promotion


C++ has min size guarantees for each type
the actual size of these types can vary based on the compiler/architecture

The variability was allowed so that the int and double data types could be set the size that perforrmes maximially.

A 32 bit computer will typiucally be able to process 32-bits of data.

an int would be likely width of 32 bits



NUmber of bits a data type is called its width.


But what happens when we want our 32-bit CPU to modify an 8-bit value (such as a char) or a 16-bit value? Some 32-bit processors (such as 32-bit x86 CPUs) can manipulate 8-bit or 16-bit values directly. However, doing so is often slower than manipulating 32-bit values! Other 32-bit CPUs (like 32-bit PowerPC CPUs), can only operate on 32-bit values, and additional tricks must be employed to manipulate narrower values.


Numeric Proportion:

Because C++ is designed to be portable and performanat across a wide range of architectures.
C++ defines a wide category of type conersions informally called numeric promotions.

Numeric promotion is the type convresion of certain narrower types to wider types so they can be processed efficiniety

All promotions are value preserving

The compiler will freely use numeric promotions as needed.

Numeric Promotion reduces deundancy:

This is so we dont have to write seperate functions that take different params if the conversion is safe.

Numeric promotion categories:
integral promotions 
floating point promotions


Floating Point conversions:
float > double

Integral Promotions:

- signed char/short can be convered to int
- unsigned char, char8_t and unsigned short can be converted to int
- bool can be converted to int


Not all widening conversions are numeric promotions:
some widening type conversions are not considered numeric promotions

This is because the goal is not to process them more effiecineity, this distinction is more academic
