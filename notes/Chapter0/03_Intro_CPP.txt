Introduction to C/C++

C was developed in 1972 at Bell. It was a systems language to write OS in. The goal was to make a minimal language that was easy to compile and produce memory efficient code, and was self contained.  C was desgined to give the programmer a lot of octnrol and allow cross platform development.

C ended up being so good that Ritchie and Ken Thompson rewrote the Unix OS using C. C's popularity was then tied to success of Unix as an OS. Whereas other OS used assembly, C allowed portability.

K&R made The C Programming Language Book, which set a specification for the language. Most compilers implemented these standards.

Then the American National Standards Institute formed a committee to establish a formal standard for C. They released the C89 standard, called ANSI C. ISO then adopted ANSI C, to be called C90. In 1999, ISO released C99, which adoptmed many features that had made their way to compilers and had been implemented in C++.

C++

C++ was developed by Stroustrup at Bell as an extension to C, in 1979. C++ added many features, and can be through of a as a superset of C (although not entirely true). Its most notable extension is that it supports OOP. 

C++ was standardized in 1998 by the ISO commitee.The goal of standarization to to ensure that C++ code is portable and behaves the same way across different compilers and platforms.


Five major updates have been made to C++. C++11, C++14, C++17, C++20 and C++23. Each added a new functionality. C++11 added a huge number of capaibilities, and is considered the best baseline for the language. New upgrades are very 3 years or so.

Standards are based on the year they are published. C++20 is 2020.

C/C++ Philosophy:
The design philosophy of C/C++ can be summed up as trust the programmer, which is great and dangerous.

What is C++ good for:
- Video games
- real time systems
- financial appliactions
- graphical appliactions
- embedded software
- AI

